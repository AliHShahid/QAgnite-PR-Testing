# Generated by Django 5.0.7 on 2025-09-26 17:07

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repo_full_name', models.CharField(max_length=255, unique=True)),
                ('default_branch', models.CharField(default='main', max_length=128)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='PullRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('title', models.CharField(max_length=512)),
                ('head_sha', models.CharField(blank=True, default='', max_length=64)),
                ('head_ref', models.CharField(blank=True, default='', max_length=255)),
                ('author', models.CharField(blank=True, default='', max_length=255)),
                ('status', models.CharField(default='pending', max_length=64)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.project')),
            ],
            options={
                'unique_together': {('project', 'number')},
            },
        ),
        migrations.CreateModel(
            name='PatchSuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diff', models.TextField()),
                ('rationale', models.TextField(blank=True, default='')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('applied', models.BooleanField(default=False)),
                ('pr_url', models.URLField(blank=True, default='')),
                ('pr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patches', to='core.pullrequest')),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_type', models.CharField(max_length=64)),
                ('status', models.CharField(default='queued', max_length=32)),
                ('payload', models.JSONField(default=dict)),
                ('logs', models.TextField(blank=True, default='')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
                ('pr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='core.pullrequest')),
            ],
        ),
        migrations.CreateModel(
            name='GeneratedTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=512)),
                ('content', models.TextField()),
                ('rationale', models.TextField(blank=True, default='')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('pr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_tests', to='core.pullrequest')),
            ],
        ),
        migrations.CreateModel(
            name='FailureCluster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signature', models.CharField(max_length=128)),
                ('summary', models.TextField()),
                ('count', models.IntegerField(default=1)),
                ('pr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='failure_clusters', to='core.pullrequest')),
            ],
        ),
        migrations.CreateModel(
            name='TestRun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
                ('passed', models.IntegerField(default=0)),
                ('failed', models.IntegerField(default=0)),
                ('errors', models.IntegerField(default=0)),
                ('coverage', models.FloatField(default=0.0)),
                ('junit_xml', models.TextField(blank=True, default='')),
                ('raw_output', models.TextField(blank=True, default='')),
                ('pr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_runs', to='core.pullrequest')),
            ],
        ),
        migrations.CreateModel(
            name='Failure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_name', models.CharField(max_length=512)),
                ('file', models.CharField(blank=True, default='', max_length=512)),
                ('line', models.IntegerField(default=0)),
                ('message', models.TextField(blank=True, default='')),
                ('stacktrace', models.TextField(blank=True, default='')),
                ('failure_type', models.CharField(blank=True, default='failure', max_length=128)),
                ('test_run', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='failures', to='core.testrun')),
            ],
        ),
    ]
